% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make-arrays.R
\name{make_arrays}
\alias{make_arrays}
\title{Prepare input/taget arrays for time series models}
\usage{
make_arrays(
  data,
  key,
  index,
  lookback,
  horizon,
  stride = 1,
  target,
  numeric = NULL,
  categorical = NULL,
  static = NULL,
  past = NULL,
  future = NULL,
  shuffle = TRUE,
  sample_frac = 1,
  y_past_sep = FALSE,
  ...
)
}
\arguments{
\item{data}{A \verb{[data.table::data.table()]} instance}

\item{lookback}{The length of the context from the past}

\item{horizon}{The forecast length}

\item{stride}{Stride of the moving window}

\item{target}{Target variable(s)}

\item{numeric}{Numeric variables}

\item{categorical}{Categorical variables}

\item{static}{Static variables}

\item{shuffle}{Shuffle samples. Set \code{FALSE} for the test dataset.}

\item{y_past_sep}{Return past values of the target variable as a separate array.
Typically, it returned as a first feature of the \code{x_past_num} array. However,
for some models (such as \strong{NBEATS}) it may be easier for further processing
to keep these values as a separate array.}
}
\value{
A list of arrays. The maximal possible content embraces eight arrays:
\itemize{
\item (\strong{y_past})
\item \strong{x_past_num}
\item \strong{x_past_cat}
\item \strong{y_fut}
\item \strong{x_fut_num}
\item \strong{x_fut_cat}
\item \strong{x_static_num}
\item \strong{x_static_cat}
}

\strong{y_past} is optional, if \code{y_past_sep = TRUE}, otherwise those values are part of
the \strong{x_past_num} array. Some array may miss depending on the specified variables.
}
\description{
Prepare input/taget arrays for time series models
}
\examples{
library(m5)
library(recipes, warn.conflicts=FALSE)
library(zeallot)
library(dplyr, warn.conflicts=FALSE)
library(data.table, warn.conflicts=FALSE)

# ==========================================================================
#                          PREPARING THE DATA
# ==========================================================================
train <- tiny_m5[date < '2016-01-01']
test  <- tiny_m5[date >= '2016-01-01']

m5_recipe <-
   recipe(value ~ ., data=train) \%>\%
   step_mutate(item_id_idx=item_id, store_id_idx=store_id) \%>\%
   step_integer(item_id_idx, store_id_idx,
                wday, month,
                event_name_1, event_type_1,
                event_name_2, event_type_2,
                zero_based=TRUE) \%>\%
   step_naomit(all_predictors()) \%>\%
   prep()

train <- bake(m5_recipe, train)
test  <- bake(m5_recipe, test)

TARGET      <- 'value'
STATIC      <- c('item_id_idx', 'store_id_idx')
CATEGORICAL <- c('event_name_1', 'event_type_1', STATIC)
NUMERIC     <- c('sell_price', 'sell_price')
KEY         <- c('item_id', 'store_id')
INDEX       <- 'date'
LOOKBACK    <- 28
HORIZON     <- 14
STRIDE      <- LOOKBACK
# ==========================================================================
#                           CREATING ARRAYS
# ==========================================================================
train_arrays <-
   make_arrays(
       data        = train,
       key         = KEY,
       index       = INDEX,
       lookback    = LOOKBACK,
       horizon     = HORIZON,
       stride      = STRIDE,
       target      = TARGET,
       static      = STATIC,
       categorical = CATEGORICAL,
       numeric     = NUMERIC
   )

print(names(train_arrays))
print(dim(train_arrays$x_past_num))

test_arrays <-
   make_arrays(
       data        = train,
       key         = KEY,
       index       = INDEX,
       lookback    = LOOKBACK,
       horizon     = HORIZON,
       stride      = STRIDE,
       target      = TARGET,
       static      = STATIC,
       categorical = CATEGORICAL,
       numeric     = NUMERIC
   )

print(names(test_arrays))
print(dim(test_arrays$x_past_num))
}
