% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as-3d-array.R
\name{as_3d_array}
\alias{as_3d_array}
\title{Create a 3-dimensional array out of a data.frame}
\usage{
as_3d_array(data, index, key)
}
\arguments{
\item{data}{A data.frame object}

\item{index}{A time-related column}

\item{key}{Columns, which creates unique time series IDs}
}
\value{
A 3-dimensional array whith the following dimensions:
(n_unique_ids, n_timesteps, n_features)
}
\description{
The \code{key} and \code{index} are used to create \code{batch_size} and \code{timesteps}
dimension respectively. At the end, they excluded from the data.frame,
so they're not present anymore in the final 3-dimensional array.
All the time series lengths must be equal.
}
\details{
For example, if we have a subset of the \code{global_economy} dataset from
the \code{{tibbledata}} package, with 263 countries (key), 58 years (index) and
two features assigned to each country/year pair, the output array will have
shape (263, 58, 2).
Bear in mind that is only a toy example, because we haven't split
the dataset into at least two parts to have historical context from the past
and expected future being target to a ML model.

It's a basic helper function -to create complete input tensors, please use
\code{\link[=make_arrays]{make_arrays()}} function.
}
\examples{
library(tsibbledata)
library(dplyr, warn.conflicts=FALSE)

# `global_economy` dataset comes from the `{tsibbledata}` package

selected_ge <-
 global_economy \%>\%
 select(Country, Year, Imports, Exports)

tensor <- as_3d_array(selected_ge, "Year", "Country")
dim(tensor)
}
