// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_arrays
List get_arrays(int n_samples, int lookback, int n_features);
RcppExport SEXP _aion_get_arrays(SEXP n_samplesSEXP, SEXP lookbackSEXP, SEXP n_featuresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_samples(n_samplesSEXP);
    Rcpp::traits::input_parameter< int >::type lookback(lookbackSEXP);
    Rcpp::traits::input_parameter< int >::type n_features(n_featuresSEXP);
    rcpp_result_gen = Rcpp::wrap(get_arrays(n_samples, lookback, n_features));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_aion_get_arrays", (DL_FUNC) &_aion_get_arrays, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_aion(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
